/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Lagerstyring.java
 *
 * Created on 09-06-2010, 09:47:16
 */
package GUI;

import Ctr.*;
import Model.Item;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Erik
 */
public class Lagerstyring extends javax.swing.JPanel {

    private TableItem tblItem;
    private ItemCtr itemCtr;
    private int itemIDUpdate;

    /** Creates new form Lagerstyring */
    public Lagerstyring() {
        initComponents();
        itemCtr = new ItemCtr();
        tblItem = new TableItem();
        itemIDUpdate = 0;
    }

    public void updateItemList() {
        ArrayList<Item> itemList = itemCtr.getItemList();
        tblItem.setData(itemList);
        tblItemList.setModel(tblItem);
        tblItemList.setAutoCreateRowSorter(true);
    }

    public void resetFields(JTextField[] textFields) {
        for (JTextField txtField : textFields) {
            txtField.setText("");
        }
    }

    public void enableFields(JTextField[] textFields) {
        for (JTextField txtField : textFields) {
            txtField.setEnabled(true);
        }
    }

    public void disableFields(JTextField[] textFields) {
        for (JTextField txtField : textFields) {
            txtField.setEnabled(false);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pItemList = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblItemList = new javax.swing.JTable();
        btnItemSeach = new javax.swing.JButton();
        txtItemSearch = new javax.swing.JTextField();
        pCreateItem = new javax.swing.JPanel();
        txtCreateItemName = new javax.swing.JTextField();
        txtCreateItemPrice = new javax.swing.JTextField();
        txtCreateItemDescription = new javax.swing.JTextField();
        txtCreateItemItemsInStock = new javax.swing.JTextField();
        txtCreateItemMinInStock = new javax.swing.JTextField();
        txtCreateItemMaxInStock = new javax.swing.JTextField();
        txtCreateItemBrand = new javax.swing.JTextField();
        txtCreateItemLocation = new javax.swing.JTextField();
        btnItemCreateItem = new javax.swing.JButton();
        chkSerialNoYesOrNo = new javax.swing.JCheckBox();
        lblItemName = new javax.swing.JLabel();
        lblItemPrice = new javax.swing.JLabel();
        lblCreateItemDescription = new javax.swing.JLabel();
        lblCreateItemItemsInStock = new javax.swing.JLabel();
        lblCreateItemMinInStock = new javax.swing.JLabel();
        lblCreateItemMaxInStock = new javax.swing.JLabel();
        lblCreateItemBrand = new javax.swing.JLabel();
        lblCreateItemLocation = new javax.swing.JLabel();
        lblCreateItemSN = new javax.swing.JLabel();
        pDeleteItem = new javax.swing.JPanel();
        txtDeleteItem = new javax.swing.JTextField();
        btnDeleteItem = new javax.swing.JButton();
        pUpdateItem = new javax.swing.JPanel();
        txtUpdateItemName = new javax.swing.JTextField();
        txtUpdateItemPrice = new javax.swing.JTextField();
        txtUpdateItemDescription = new javax.swing.JTextField();
        txtUpdateItemItemsInStock = new javax.swing.JTextField();
        txtUpdateItemMinInStock = new javax.swing.JTextField();
        txtUpdateItemMaxInStock = new javax.swing.JTextField();
        txtUpdateItemBrand = new javax.swing.JTextField();
        txtUpdateItemLocation = new javax.swing.JTextField();
        btnUpdateItem = new javax.swing.JButton();
        btnUpdateItemGetItem = new javax.swing.JButton();
        txtUpdateItemGetItem = new javax.swing.JTextField();
        lblUpdateItemName = new javax.swing.JLabel();
        lblUpdateItemPrice = new javax.swing.JLabel();
        lblUpdateItemDescription = new javax.swing.JLabel();
        lblUpdateItemItemsInStock = new javax.swing.JLabel();
        lblUpdateItemMinInStock = new javax.swing.JLabel();
        lblUpdateItemMaxInStock = new javax.swing.JLabel();
        lblUpdateItemBrand = new javax.swing.JLabel();
        lblUpdateItemLocation = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1024, 768));
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        jPanel1.setPreferredSize(new java.awt.Dimension(1024, 768));

        pItemList.setBorder(javax.swing.BorderFactory.createTitledBorder("Vareliste"));

        tblItemList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vare-ID", "Navn", "Pris", "Beskrivelse", "Antal", "Min.", "Maks.", "Brand", "Lokation"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblItemList);

        btnItemSeach.setText("SÃ¸g");
        btnItemSeach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnItemSeachActionPerformed(evt);
            }
        });

        txtItemSearch.setText("Indtast vare-ID");
        txtItemSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtItemSearchFocusGained(evt);
            }
        });

        javax.swing.GroupLayout pItemListLayout = new javax.swing.GroupLayout(pItemList);
        pItemList.setLayout(pItemListLayout);
        pItemListLayout.setHorizontalGroup(
            pItemListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pItemListLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pItemListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)
                    .addGroup(pItemListLayout.createSequentialGroup()
                        .addComponent(btnItemSeach)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtItemSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pItemListLayout.setVerticalGroup(
            pItemListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pItemListLayout.createSequentialGroup()
                .addGroup(pItemListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtItemSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnItemSeach))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 561, Short.MAX_VALUE)
                .addContainerGap())
        );

        pCreateItem.setBorder(javax.swing.BorderFactory.createTitledBorder("Opret vare"));

        btnItemCreateItem.setText("Opret vare");
        btnItemCreateItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnItemCreateItemActionPerformed(evt);
            }
        });

        chkSerialNoYesOrNo.setText("(Ja/nej)");
        chkSerialNoYesOrNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSerialNoYesOrNoActionPerformed(evt);
            }
        });

        lblItemName.setText("Navn:");

        lblItemPrice.setText("Pris:");

        lblCreateItemDescription.setText("Beskrivelse:");

        lblCreateItemItemsInStock.setText("Antal:");

        lblCreateItemMinInStock.setText("Min.:");

        lblCreateItemMaxInStock.setText("Maks.:");

        lblCreateItemBrand.setText("Brand:");

        lblCreateItemLocation.setText("Lokation:");

        lblCreateItemSN.setText("Serienr.:");

        javax.swing.GroupLayout pCreateItemLayout = new javax.swing.GroupLayout(pCreateItem);
        pCreateItem.setLayout(pCreateItemLayout);
        pCreateItemLayout.setHorizontalGroup(
            pCreateItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pCreateItemLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pCreateItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblItemPrice)
                    .addComponent(lblItemName)
                    .addComponent(lblCreateItemDescription)
                    .addComponent(lblCreateItemItemsInStock)
                    .addComponent(lblCreateItemMinInStock)
                    .addComponent(lblCreateItemBrand)
                    .addComponent(lblCreateItemLocation)
                    .addComponent(lblCreateItemSN))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pCreateItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtCreateItemName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pCreateItemLayout.createSequentialGroup()
                        .addComponent(txtCreateItemMinInStock, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCreateItemMaxInStock)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCreateItemMaxInStock, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pCreateItemLayout.createSequentialGroup()
                        .addComponent(chkSerialNoYesOrNo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 149, Short.MAX_VALUE)
                        .addComponent(btnItemCreateItem))
                    .addComponent(txtCreateItemBrand, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                    .addComponent(txtCreateItemPrice, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                    .addComponent(txtCreateItemDescription, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                    .addComponent(txtCreateItemItemsInStock, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                    .addComponent(txtCreateItemLocation, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE))
                .addContainerGap())
        );
        pCreateItemLayout.setVerticalGroup(
            pCreateItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pCreateItemLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pCreateItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCreateItemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblItemName, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pCreateItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblItemPrice)
                    .addComponent(txtCreateItemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pCreateItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCreateItemDescription)
                    .addComponent(txtCreateItemDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(pCreateItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCreateItemItemsInStock)
                    .addComponent(txtCreateItemItemsInStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pCreateItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCreateItemMinInStock)
                    .addComponent(txtCreateItemMinInStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCreateItemMaxInStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCreateItemMaxInStock))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pCreateItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCreateItemBrand)
                    .addComponent(txtCreateItemBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pCreateItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCreateItemLocation)
                    .addComponent(txtCreateItemLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pCreateItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkSerialNoYesOrNo)
                    .addComponent(lblCreateItemSN)
                    .addComponent(btnItemCreateItem))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        pDeleteItem.setBorder(javax.swing.BorderFactory.createTitledBorder("Slet vare"));

        btnDeleteItem.setText("Slet");
        btnDeleteItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteItemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pDeleteItemLayout = new javax.swing.GroupLayout(pDeleteItem);
        pDeleteItem.setLayout(pDeleteItemLayout);
        pDeleteItemLayout.setHorizontalGroup(
            pDeleteItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pDeleteItemLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(btnDeleteItem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtDeleteItem, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
                .addContainerGap())
        );
        pDeleteItemLayout.setVerticalGroup(
            pDeleteItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pDeleteItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(txtDeleteItem, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btnDeleteItem))
        );

        pUpdateItem.setBorder(javax.swing.BorderFactory.createTitledBorder("Opdater vare"));

        txtUpdateItemName.setEnabled(false);

        txtUpdateItemPrice.setEnabled(false);

        txtUpdateItemDescription.setEnabled(false);

        txtUpdateItemItemsInStock.setEnabled(false);

        txtUpdateItemMinInStock.setEnabled(false);

        txtUpdateItemMaxInStock.setEnabled(false);

        txtUpdateItemBrand.setEnabled(false);

        txtUpdateItemLocation.setEnabled(false);

        btnUpdateItem.setText("Opdate vare");
        btnUpdateItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateItemActionPerformed(evt);
            }
        });

        btnUpdateItemGetItem.setText("Hent");
        btnUpdateItemGetItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateItemGetItemActionPerformed(evt);
            }
        });

        txtUpdateItemGetItem.setText("Indtast vare-ID");
        txtUpdateItemGetItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUpdateItemGetItemActionPerformed(evt);
            }
        });
        txtUpdateItemGetItem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtUpdateItemGetItemFocusGained(evt);
            }
        });

        lblUpdateItemName.setText("Navn:");

        lblUpdateItemPrice.setText("Pris:");

        lblUpdateItemDescription.setText("Beskrivelse:");

        lblUpdateItemItemsInStock.setText("Antal:");

        lblUpdateItemMinInStock.setText("Min.:");

        lblUpdateItemMaxInStock.setText("Max.:");

        lblUpdateItemBrand.setText("Brand:");

        lblUpdateItemLocation.setText("Lokation:");

        javax.swing.GroupLayout pUpdateItemLayout = new javax.swing.GroupLayout(pUpdateItem);
        pUpdateItem.setLayout(pUpdateItemLayout);
        pUpdateItemLayout.setHorizontalGroup(
            pUpdateItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pUpdateItemLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pUpdateItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUpdateItemBrand, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblUpdateItemLocation, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblUpdateItemMinInStock, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblUpdateItemItemsInStock, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblUpdateItemDescription, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblUpdateItemPrice, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblUpdateItemName, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pUpdateItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtUpdateItemGetItem, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                    .addGroup(pUpdateItemLayout.createSequentialGroup()
                        .addComponent(txtUpdateItemMinInStock, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblUpdateItemMaxInStock)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtUpdateItemMaxInStock, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtUpdateItemItemsInStock, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                    .addComponent(txtUpdateItemBrand, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                    .addComponent(txtUpdateItemLocation, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                    .addComponent(txtUpdateItemDescription, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                    .addComponent(txtUpdateItemPrice, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                    .addComponent(txtUpdateItemName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(pUpdateItemLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(btnUpdateItemGetItem)
                .addContainerGap(313, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pUpdateItemLayout.createSequentialGroup()
                .addContainerGap(275, Short.MAX_VALUE)
                .addComponent(btnUpdateItem)
                .addGap(10, 10, 10))
        );
        pUpdateItemLayout.setVerticalGroup(
            pUpdateItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pUpdateItemLayout.createSequentialGroup()
                .addGroup(pUpdateItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdateItemGetItem)
                    .addComponent(txtUpdateItemGetItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pUpdateItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUpdateItemName)
                    .addComponent(txtUpdateItemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pUpdateItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUpdateItemPrice)
                    .addComponent(txtUpdateItemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pUpdateItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUpdateItemDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUpdateItemDescription))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pUpdateItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUpdateItemItemsInStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUpdateItemItemsInStock))
                .addGap(5, 5, 5)
                .addGroup(pUpdateItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUpdateItemMinInStock)
                    .addComponent(txtUpdateItemMinInStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUpdateItemMaxInStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUpdateItemMaxInStock))
                .addGap(12, 12, 12)
                .addGroup(pUpdateItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUpdateItemBrand)
                    .addComponent(txtUpdateItemBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pUpdateItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUpdateItemLocation)
                    .addComponent(txtUpdateItemLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdateItem)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pItemList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(pDeleteItem, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pUpdateItem, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pCreateItem, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(pCreateItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pDeleteItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pUpdateItem, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pItemList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        add(jPanel1);
    }// </editor-fold>//GEN-END:initComponents

    private void btnItemCreateItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnItemCreateItemActionPerformed
        // TODO add your handling code here:
        try {
            String itemName = txtCreateItemName.getText();
            double itemPrice = Double.parseDouble(txtCreateItemPrice.getText());
            String description = txtCreateItemDescription.getText();
            int maxInStock = Integer.parseInt(txtCreateItemMaxInStock.getText());
            int minInStock = Integer.parseInt(txtCreateItemMinInStock.getText());
            int itemsInStock = Integer.parseInt(txtCreateItemItemsInStock.getText());
            String brand = txtCreateItemBrand.getText();
            String location = txtCreateItemLocation.getText();
            boolean containsSerialNo = chkSerialNoYesOrNo.isEnabled();
            JTextField[] txtFields = {txtCreateItemName,
                txtCreateItemPrice, txtCreateItemDescription,
                txtCreateItemMaxInStock, txtCreateItemMinInStock,
                txtCreateItemItemsInStock, txtCreateItemBrand,
                txtCreateItemLocation};
            String[] stringArray = {itemName, description, brand, location};
            if (maxInStock <= minInStock) {
                JOptionPane.showMessageDialog(this, "Maksmimumsbeholdningen er mindre end eller lig med minimumsbeholdningen");
            } else {
                if (itemsInStock > maxInStock || itemsInStock < minInStock) {
                    JOptionPane.showMessageDialog(this, "Antallet af eksemplarer skal vÃ¦re indenfor minimums-/maksiumsbeholdningen");
                } else {
                    if (minInStock < 0) {
                        throw new IllegalArgumentException();
                    } else {
                        if (itemName.trim().isEmpty() || description.trim().isEmpty() || brand.trim().isEmpty() || location.trim().isEmpty()) {
                            stringArray.toString().trim().isEmpty();
                            JOptionPane.showMessageDialog(this, "Udfyld venligst alle felterne");
                        } else {
                            int itemID = itemCtr.createItem(itemName, itemPrice, description, maxInStock, minInStock, itemsInStock, brand, location, containsSerialNo);
                            updateItemList();
                            resetFields(txtFields);
                            JOptionPane.showMessageDialog(this, "En vare med ID'et " + itemID + " er blevet oprettet");
                            txtCreateItemName.requestFocus();
                        }
                    }
                }
            }
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "Et tal er pÃ¥krÃ¦vet i felterne maks./min/antal");
        } catch (IllegalArgumentException iae) {
            JOptionPane.showMessageDialog(this, "Tallet skal mindst vÃ¦re 0");
        }

    }//GEN-LAST:event_btnItemCreateItemActionPerformed

    private void chkSerialNoYesOrNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSerialNoYesOrNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkSerialNoYesOrNoActionPerformed

    private void btnDeleteItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteItemActionPerformed
        // TODO add your handling code here:
        int itemID = 0;
        try {
            itemID = Integer.parseInt(txtDeleteItem.getText());
            if (itemCtr.getItem(itemID) != null) {
                itemCtr.deleteItem(itemID);
                updateItemList();
                txtDeleteItem.setText("");
                //EfterfÃ¸lgende er for at nulstille opdater vare vinduet.
                //Dette forhindrer brugeren at opdaterer en vare,
                //som ikke eksisterer.
                JTextField[] txtFields = {txtUpdateItemName, txtUpdateItemPrice,
                    txtUpdateItemDescription, txtUpdateItemMaxInStock,
                    txtUpdateItemMinInStock, txtUpdateItemItemsInStock,
                    txtUpdateItemBrand, txtUpdateItemLocation};
                resetFields(txtFields);
                disableFields(txtFields);
                txtUpdateItemGetItem.setText("");
                JOptionPane.showMessageDialog(this, "Varen med ID'et " + itemID + " blev slettet");

            } else {

                JOptionPane.showMessageDialog(this, "ID'et " + itemID + " blev ikke fundet");
                txtDeleteItem.setText("");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Skal vÃ¦re et heltal");
            txtDeleteItem.setText("");
        }

    }//GEN-LAST:event_btnDeleteItemActionPerformed

    private void btnItemSeachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnItemSeachActionPerformed
        // TODO add your handling code here:
        try {
            int itemID = Integer.parseInt(txtItemSearch.getText());
            if (itemCtr.getItem(itemID) != null) {
                itemCtr.getItem(itemID);
                txtItemSearch.setText("");
                int rows = tblItemList.getModel().getRowCount();
                int col = 0;
                for (int i = 0; i < rows; i++) {
                    int value = (Integer) tblItemList.getModel().getValueAt(i, col);
                    if (value == itemID) {
                        tblItemList.setRowSelectionInterval(i, i);
                        tblItemList.addRowSelectionInterval(i, i);
                        tblItemList.scrollRectToVisible(tblItemList.getCellRect(i, i, true));
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "ID'et " + itemID + " blev ikke fundet", "Meddelelse", 2);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Skal vÃ¦re et heltal");
            txtItemSearch.setText("");
        }
    }//GEN-LAST:event_btnItemSeachActionPerformed

    private void btnUpdateItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateItemActionPerformed
        // TODO add your handling code here:
        try {
//            int itemID = Integer.parseInt(txtUpdateItemGetItem.getText());
//            if (itemID == 0) {
//                throw new IllegalStateException();
//            }
            String itemName = txtUpdateItemName.getText();
            double itemPrice = Double.parseDouble(txtUpdateItemPrice.getText());
            String description = txtUpdateItemDescription.getText();
            int maxInStock = Integer.parseInt(txtUpdateItemMaxInStock.getText());
            int minInStock = Integer.parseInt(txtUpdateItemMinInStock.getText());
            int itemsInStock = Integer.parseInt(txtUpdateItemItemsInStock.getText());
            String brand = txtUpdateItemBrand.getText();
            String location = txtUpdateItemLocation.getText();
            itemCtr.updateItemName(itemIDUpdate, itemName);
            itemCtr.updateItemPrice(itemIDUpdate, itemPrice);
            itemCtr.updateDescription(itemIDUpdate, description);
            itemCtr.updateMinInStock(itemIDUpdate, minInStock);
            itemCtr.updateMaxInStock(itemIDUpdate, maxInStock);
            itemCtr.updateItemsInStock(itemIDUpdate, itemsInStock, minInStock);
            itemCtr.updateBrand(itemIDUpdate, brand);
            itemCtr.updatePlace(itemIDUpdate, location);
            JTextField[] txtFields = {txtUpdateItemName, txtUpdateItemPrice,
                txtUpdateItemDescription, txtUpdateItemMaxInStock,
                txtUpdateItemMinInStock, txtUpdateItemItemsInStock,
                txtUpdateItemBrand, txtUpdateItemLocation};
            updateItemList();
            resetFields(txtFields);
            disableFields(txtFields);
            txtUpdateItemGetItem.setText("");
            JOptionPane.showMessageDialog(this, "Varen med ID'et " + itemIDUpdate + " er blevet opdateret");
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "Et tal er pÃ¥krÃ¦vet i felterne maks./min/antal");
        } catch (NullPointerException npe) {
            JOptionPane.showMessageDialog(this, "ID'et blev ikke fundet");
        } catch (IllegalStateException ise) {
            JOptionPane.showMessageDialog(this, "Indtast ID");
        }
    }//GEN-LAST:event_btnUpdateItemActionPerformed

    private void btnUpdateItemGetItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateItemGetItemActionPerformed
        // TODO add your handling code here:
        try {
            int itemID = Integer.parseInt(txtUpdateItemGetItem.getText());
            if (itemCtr.getItem(itemID) != null) {
                itemIDUpdate = itemID;
                JTextField[] txtFields = {txtUpdateItemName, txtUpdateItemPrice,
                    txtUpdateItemDescription, txtUpdateItemMaxInStock,
                    txtUpdateItemMinInStock, txtUpdateItemItemsInStock,
                    txtUpdateItemBrand, txtUpdateItemLocation};
                enableFields(txtFields);
                txtUpdateItemName.setText(itemCtr.getItem(itemID).getItemName());
                txtUpdateItemPrice.setText(Double.toString(itemCtr.getItem(itemID).getItemPrice()));
                txtUpdateItemDescription.setText(itemCtr.getItem(itemID).getDescription());
                txtUpdateItemMaxInStock.setText(Integer.toString(itemCtr.getItem(itemID).getMaxInStock()));
                txtUpdateItemMinInStock.setText(Integer.toString(itemCtr.getItem(itemID).getMinInStock()));
                txtUpdateItemItemsInStock.setText(Integer.toString(itemCtr.getItem(itemID).getItemsInStock()));
                txtUpdateItemBrand.setText(itemCtr.getItem(itemID).getBrand());
                txtUpdateItemLocation.setText(itemCtr.getItem(itemID).getPlace());
            } else {
                JOptionPane.showMessageDialog(this, "ID'et blev ikke fundet");
            }
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "Skal vÃ¦re et heltal");
        }
    }//GEN-LAST:event_btnUpdateItemGetItemActionPerformed

    private void txtItemSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtItemSearchFocusGained
        // TODO add your handling code here:
        txtItemSearch.setText("");
    }//GEN-LAST:event_txtItemSearchFocusGained

    private void txtUpdateItemGetItemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUpdateItemGetItemFocusGained
        // TODO add your handling code here:
        txtUpdateItemGetItem.setText("");
    }//GEN-LAST:event_txtUpdateItemGetItemFocusGained

    private void txtUpdateItemGetItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUpdateItemGetItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUpdateItemGetItemActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeleteItem;
    private javax.swing.JButton btnItemCreateItem;
    private javax.swing.JButton btnItemSeach;
    private javax.swing.JButton btnUpdateItem;
    private javax.swing.JButton btnUpdateItemGetItem;
    private javax.swing.JCheckBox chkSerialNoYesOrNo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCreateItemBrand;
    private javax.swing.JLabel lblCreateItemDescription;
    private javax.swing.JLabel lblCreateItemItemsInStock;
    private javax.swing.JLabel lblCreateItemLocation;
    private javax.swing.JLabel lblCreateItemMaxInStock;
    private javax.swing.JLabel lblCreateItemMinInStock;
    private javax.swing.JLabel lblCreateItemSN;
    private javax.swing.JLabel lblItemName;
    private javax.swing.JLabel lblItemPrice;
    private javax.swing.JLabel lblUpdateItemBrand;
    private javax.swing.JLabel lblUpdateItemDescription;
    private javax.swing.JLabel lblUpdateItemItemsInStock;
    private javax.swing.JLabel lblUpdateItemLocation;
    private javax.swing.JLabel lblUpdateItemMaxInStock;
    private javax.swing.JLabel lblUpdateItemMinInStock;
    private javax.swing.JLabel lblUpdateItemName;
    private javax.swing.JLabel lblUpdateItemPrice;
    private javax.swing.JPanel pCreateItem;
    private javax.swing.JPanel pDeleteItem;
    private javax.swing.JPanel pItemList;
    private javax.swing.JPanel pUpdateItem;
    private javax.swing.JTable tblItemList;
    private javax.swing.JTextField txtCreateItemBrand;
    private javax.swing.JTextField txtCreateItemDescription;
    private javax.swing.JTextField txtCreateItemItemsInStock;
    private javax.swing.JTextField txtCreateItemLocation;
    private javax.swing.JTextField txtCreateItemMaxInStock;
    private javax.swing.JTextField txtCreateItemMinInStock;
    private javax.swing.JTextField txtCreateItemName;
    private javax.swing.JTextField txtCreateItemPrice;
    private javax.swing.JTextField txtDeleteItem;
    private javax.swing.JTextField txtItemSearch;
    private javax.swing.JTextField txtUpdateItemBrand;
    private javax.swing.JTextField txtUpdateItemDescription;
    private javax.swing.JTextField txtUpdateItemGetItem;
    private javax.swing.JTextField txtUpdateItemItemsInStock;
    private javax.swing.JTextField txtUpdateItemLocation;
    private javax.swing.JTextField txtUpdateItemMaxInStock;
    private javax.swing.JTextField txtUpdateItemMinInStock;
    private javax.swing.JTextField txtUpdateItemName;
    private javax.swing.JTextField txtUpdateItemPrice;
    // End of variables declaration//GEN-END:variables
}
